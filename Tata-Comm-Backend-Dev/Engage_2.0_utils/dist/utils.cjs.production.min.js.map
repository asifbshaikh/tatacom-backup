{"version":3,"file":"utils.cjs.production.min.js","sources":["../src/index.ts"],"sourcesContent":["import isToday from 'date-fns/isToday';\nimport isYesterday from 'date-fns/isYesterday';\n\n/**\n * @name Get contrasting text color\n * @description Get contrasting text color from a text color\n * @param bgColor  Background color of text.\n * @returns contrasting text color\n */\nexport const getContrastingTextColor = (bgColor: string): string => {\n  const color = bgColor.replace('#', '');\n  const r = parseInt(color.slice(0, 2), 16);\n  const g = parseInt(color.slice(2, 4), 16);\n  const b = parseInt(color.slice(4, 6), 16);\n  // http://stackoverflow.com/a/3943023/112731\n  return r * 0.299 + g * 0.587 + b * 0.114 > 186 ? '#000000' : '#FFFFFF';\n};\n\n/**\n * @name Get formatted date\n * @description Get date in today, yesterday or any other date format\n * @param date  date\n * @param todayText  Today text\n * @param yesterdayText  Yesterday text\n * @returns formatted date\n */\nexport const formatDate = ({\n  date,\n  todayText,\n  yesterdayText,\n}: {\n  date: string;\n  todayText: string;\n  yesterdayText: string;\n}) => {\n  const dateValue = new Date(date);\n  if (isToday(dateValue)) return todayText;\n  if (isYesterday(dateValue)) return yesterdayText;\n  return date;\n};\n\n/**\n * @name formatTime\n * @description Format time to Hour, Minute and Second\n * @param timeInSeconds  number\n * @returns formatted time\n */\n\nexport const formatTime = (timeInSeconds: number) => {\n  let formattedTime = '';\n  if (timeInSeconds >= 60 && timeInSeconds < 3600) {\n    const minutes = Math.floor(timeInSeconds / 60);\n    formattedTime = `${minutes} Min`;\n    const seconds = minutes === 60 ? 0 : Math.floor(timeInSeconds % 60);\n    return formattedTime + `${seconds > 0 ? ' ' + seconds + ' Sec' : ''}`;\n  }\n  if (timeInSeconds >= 3600 && timeInSeconds < 86400) {\n    const hours = Math.floor(timeInSeconds / 3600);\n    formattedTime = `${hours} Hr`;\n    const minutes =\n      timeInSeconds % 3600 < 60 || hours === 24\n        ? 0\n        : Math.floor((timeInSeconds % 3600) / 60);\n    return formattedTime + `${minutes > 0 ? ' ' + minutes + ' Min' : ''}`;\n  }\n  if (timeInSeconds >= 86400) {\n    const days = Math.floor(timeInSeconds / 86400);\n    formattedTime = `${days} Day`;\n    const hours =\n      timeInSeconds % 86400 < 3600 || days >= 364\n        ? 0\n        : Math.floor((timeInSeconds % 86400) / 3600);\n    return formattedTime + `${hours > 0 ? ' ' + hours + ' Hr' : ''}`;\n  }\n  return `${Math.floor(timeInSeconds)} Sec`;\n};\n"],"names":["date","todayText","yesterdayText","dateValue","Date","isToday","isYesterday","timeInSeconds","formattedTime","minutes","Math","floor","seconds","hours","days","bgColor","color","replace","parseInt","slice"],"mappings":"uOA0B0B,gBACxBA,IAAAA,KACAC,IAAAA,UACAC,IAAAA,cAMMC,EAAY,IAAIC,KAAKJ,UACvBK,EAAQF,GAAmBF,EAC3BK,EAAYH,GAAmBD,EAC5BF,sBAUiB,SAACO,OACrBC,EAAgB,MAChBD,GAAiB,IAAMA,EAAgB,KAAM,KACzCE,EAAUC,KAAKC,MAAMJ,EAAgB,IAC3CC,EAAmBC,aACbG,EAAsB,KAAZH,EAAiB,EAAIC,KAAKC,MAAMJ,EAAgB,WACzDC,GAAmBI,EAAU,EAAI,IAAMA,EAAU,OAAS,OAE/DL,GAAiB,MAAQA,EAAgB,MAAO,KAC5CM,EAAQH,KAAKC,MAAMJ,EAAgB,MACzCC,EAAmBK,YACbJ,EACJF,EAAgB,KAAO,IAAgB,KAAVM,EACzB,EACAH,KAAKC,MAAOJ,EAAgB,KAAQ,WACnCC,GAAmBC,EAAU,EAAI,IAAMA,EAAU,OAAS,OAE/DF,GAAiB,MAAO,KACpBO,EAAOJ,KAAKC,MAAMJ,EAAgB,OACxCC,EAAmBM,aACbD,EACJN,EAAgB,MAAQ,MAAQO,GAAQ,IACpC,EACAJ,KAAKC,MAAOJ,EAAgB,MAAS,aACpCC,GAAmBK,EAAQ,EAAI,IAAMA,EAAQ,MAAQ,WAEpDH,KAAKC,MAAMJ,2CAjEgB,SAACQ,OAChCC,EAAQD,EAAQE,QAAQ,IAAK,UAKxB,KAJDC,SAASF,EAAMG,MAAM,EAAG,GAAI,IAIf,KAHbD,SAASF,EAAMG,MAAM,EAAG,GAAI,IAGH,KAFzBD,SAASF,EAAMG,MAAM,EAAG,GAAI,IAEK,IAAM,UAAY"}